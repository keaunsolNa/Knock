upstream frontend {
    server knock-front:3000;
}

upstream backend {
    server knock-back:53287;
}

server {
    listen 80;
    server_name 203.229.246.216 localhost;

    # CORS 허용 설정 추가
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

    # 기본 요청을 frontend로 프록시
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_read_timeout 90;
    }

    # API 요청을 backend로 프록시
    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_read_timeout 90;
    }

    # /movie 경로를 frontend로 라우팅
    location /movie {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

     # /auth 경로를 backend로 라우팅
    location /auth {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # WebSocket 설정 (Frontend 연결)
    location /ws {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin "";
        proxy_read_timeout 90;
    }

    # WebSocket (sockjs) 설정
    location /sockjs-node {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 90;
    }
}