upstream frontend {
    server front:3000;
}

upstream backend {
    server back:53287;
}

# server {
#     listen 80;
#     server_name 203.229.246.216 localhost;
#     return 301 https://localhost:3000;
# }
server {
    listen 443 ssl;
    server_name 203.229.246.216 localhost;
#     server_name localhost;

    ssl_certificate C:/DevTool/nginx/conf/selfsigned.crt;
    ssl_certificate_key C:/DevTool/nginx/conf/selfsigned.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # CORS 허용 설정 추가
    add_header 'Access-Control-Allow-Origin' 'http://front:3000' always;
#     add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Credentials' always;

    # 기본 요청을 frontend로 프록시
    location / {
        proxy_pass http://front:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_read_timeout 90;
    }

    # API 요청을 backend로 프록시
    location /api/ {
        proxy_pass https://back:53287/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_read_timeout 90;

        proxy_ssl_verify off;
        proxy_ssl_session_reuse on;
        proxy_pass_header Set-Cookie;

    }

    # /movie 경로를 frontend로 라우팅
    location /movie {
        proxy_pass http://front:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_read_timeout 90;
    }

     # /auth 경로를 backend로 라우팅
    location /auth/ {
        proxy_pass https://back:53287/auth;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_read_timeout 90;

        proxy_set_header X-Forwarded-Proto https;
        proxy_ssl_verify off;
        proxy_ssl_session_reuse on;
        proxy_pass_header Set-Cookie;
    }

#     # WebSocket 설정 (Frontend 연결)
#     location /ws {
#         proxy_pass http://frontend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header Origin "";
#         proxy_read_timeout 90;
#     }
#
#     # WebSocket (sockjs) 설정
#     location /sockjs-node {
#         proxy_pass http://frontend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_read_timeout 90;
#     }
}